/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/triggermesh/azure-event-channel/pkg/apis/messaging/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureChannelLister helps list AzureChannels.
type AzureChannelLister interface {
	// List lists all AzureChannels in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.AzureChannel, err error)
	// AzureChannels returns an object that can list and get AzureChannels.
	AzureChannels(namespace string) AzureChannelNamespaceLister
	AzureChannelListerExpansion
}

// azureChannelLister implements the AzureChannelLister interface.
type azureChannelLister struct {
	indexer cache.Indexer
}

// NewAzureChannelLister returns a new AzureChannelLister.
func NewAzureChannelLister(indexer cache.Indexer) AzureChannelLister {
	return &azureChannelLister{indexer: indexer}
}

// List lists all AzureChannels in the indexer.
func (s *azureChannelLister) List(selector labels.Selector) (ret []*v1alpha1.AzureChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureChannel))
	})
	return ret, err
}

// AzureChannels returns an object that can list and get AzureChannels.
func (s *azureChannelLister) AzureChannels(namespace string) AzureChannelNamespaceLister {
	return azureChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureChannelNamespaceLister helps list and get AzureChannels.
type AzureChannelNamespaceLister interface {
	// List lists all AzureChannels in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.AzureChannel, err error)
	// Get retrieves the AzureChannel from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.AzureChannel, error)
	AzureChannelNamespaceListerExpansion
}

// azureChannelNamespaceLister implements the AzureChannelNamespaceLister
// interface.
type azureChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureChannels in the indexer for a given namespace.
func (s azureChannelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureChannel))
	})
	return ret, err
}

// Get retrieves the AzureChannel from the indexer for a given namespace and name.
func (s azureChannelNamespaceLister) Get(name string) (*v1alpha1.AzureChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azurechannel"), name)
	}
	return obj.(*v1alpha1.AzureChannel), nil
}
